name: Release to PyPI

on:
  release:
    types: [published]
  push:
    tags:
      - "v*"

env:
  PYTHON_VERSION: "3.11"

jobs:
  # ===============================
  # Build Distribution Packages
  # ===============================
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine

    - name: Verify package metadata
      run: |
        python -c "import sphinxcontrib.jsontable; print(f'Version: {sphinxcontrib.jsontable.__version__}')"
        python -c "from sphinxcontrib.jsontable import setup; print('Setup function available')"

    - name: Build source distribution and wheel
      run: |
        python -m build --verbose

    - name: Verify distributions
      run: |
        python -m twine check dist/*
        ls -la dist/

    - name: Store distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  # ===============================
  # Publish to TestPyPI (Optional)
  # ===============================
  publish-to-testpypi:
    name: Publish to TestPyPI üß™
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/sphinxcontrib-jsontable
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true

  # ===============================
  # Publish to PyPI (Production)
  # ===============================
  publish-to-pypi:
    name: Publish to PyPI üöÄ
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/sphinxcontrib-jsontable
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        print-hash: true

  # ===============================
  # Post-Release Notifications
  # ===============================
  notify-success:
    name: Notify successful release üì¢
    if: github.event_name == 'release'
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    
    steps:
    - name: Create success notification
      run: |
        echo "üéâ Successfully published sphinxcontrib-jsontable to PyPI!"
        echo "üì¶ Package: https://pypi.org/project/sphinxcontrib-jsontable/"
        echo "üè∑Ô∏è Version: ${{ github.ref_name }}"
