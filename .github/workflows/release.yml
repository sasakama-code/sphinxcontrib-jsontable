name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.1)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  validate-release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Run quality checks
      run: |
        ruff check .
        ruff format --check .
        mypy sphinxcontrib

    - name: Run tests
      run: |
        pytest tests/ \
          --cov=sphinxcontrib.jsontable \
          --cov-fail-under=80 \
          -v

    - name: Security check
      run: |
        pip install safety
        safety check

  build-and-publish:
    needs: validate-release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Extract version from tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Releasing version: $VERSION"

    - name: Use manual version
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        echo "Releasing version: ${{ github.event.inputs.version }}"

    - name: Update version in pyproject.toml
      run: |
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
        echo "Updated version in pyproject.toml to $VERSION"

    - name: Build package
      run: python -m build

    - name: Check package
      run: python -m twine check dist/*

    - name: Test package installation
      run: |
        pip install dist/*.whl
        python -c "import sphinxcontrib.jsontable; print(f'Package version: {sphinxcontrib.jsontable.__version__}')"

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}

    - name: Test installation from Test PyPI
      run: |
        pip uninstall -y sphinxcontrib-jsontable
        sleep 30  # Wait for Test PyPI to update
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ sphinxcontrib-jsontable==$VERSION
        python -c "import sphinxcontrib.jsontable; print('Test PyPI installation successful')"

    - name: Publish to PyPI
      if: success()
      uses: pypa/gh-action-pypi-publish@release/v1
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this release
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          pip install sphinxcontrib-jsontable==${{ env.VERSION }}
          ```
          
          ## Links
          
          - [PyPI Package](https://pypi.org/project/sphinxcontrib-jsontable/${{ env.VERSION }}/)
          - [Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: distribution-packages
        path: dist/
        retention-days: 30
