[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sphinxcontrib-jsontable"
version = "0.1.0"
description = "Sphinx extension to render JSON data as tables"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "sasakama-code", email = "sasakamacode@gmail.com" }]
maintainers = [{ name = "sasakama-code", email = "sasakamacode@gmail.com" }]
keywords = ["sphinx", "json", "table", "documentation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Framework :: Sphinx :: Extension",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup",
]
requires-python = ">=3.9"
dependencies = [
    "sphinx>=3.0",
    "docutils>=0.18",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "coverage>=7.6.1",
    "mypy>=1.14.1",
    "ruff>=0.11.11",
    "pre-commit>=3.5.0",
    "build>=1.2.2.post1",
    "twine>=6.1.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.2.0",
]
docs = [
    "sphinx-rtd-theme>=3.0.2",
    "sphinx-autodoc-typehints>=2.0.1",
    "myst-parser>=0.18",
]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.10.0",
]

[project.urls]
Homepage = "https://github.com/sasakama-code/sphinxcontrib-jsontable"
Repository = "https://github.com/sasakama-code/sphinxcontrib-jsontable.git"
Issues = "https://github.com/sasakama-code/sphinxcontrib-jsontable/issues"
Changelog = "https://github.com/sasakama-code/sphinxcontrib-jsontable/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["sphinxcontrib.jsontable*"]

[tool.setuptools.package-data]
"sphinxcontrib.jsontable" = ["py.typed"]

# Ruff configuration - Very conservative for existing codebase
[tool.ruff]
target-version = "py39"
line-length = 120  # More lenient line length

# Minimal rule set for existing codebase compatibility
select = [
    "F",  # pyflakes only - most critical errors
]

# Comprehensive ignores for existing codebases
ignore = [
    "E501",  # line too long
    "E502",  # redundant backslash
    "E701",  # multiple statements on one line
    "E702",  # multiple statements on one line (semicolon)
    "E703",  # statement ends with a semicolon
    "E711",  # comparison to None should be 'if cond is None:'
    "E712",  # comparison to True should be 'if cond is True:'
    "E713",  # test for membership should be 'not in'
    "E714",  # test for object identity should be 'is not'
    "E721",  # do not compare types, use 'isinstance()'
    "E722",  # do not use bare 'except'
    "E731",  # do not assign a lambda expression, use a def
    "E741",  # ambiguous variable name
    "E742",  # ambiguous class name
    "E743",  # ambiguous function name
    "W503",  # line break before binary operator
    "W504",  # line break after binary operator
    "W605",  # invalid escape sequence
]

[tool.ruff.per-file-ignores]
# Allow everything in __init__.py files
"__init__.py" = ["F401", "F403", "F405"]
# Allow everything in test files
"tests/**/*.py" = ["F401", "F403", "F405", "F811", "F841"]
# Allow everything in example files
"examples/**/*.py" = ["F401", "F403", "F405", "F811", "F841"]

[tool.ruff.isort]
known-first-party = ["sphinxcontrib.jsontable"]

# MyPy configuration - Very relaxed for transition
[tool.mypy]
python_version = "3.9"

# Disable most strict checks for existing codebase
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_subclassing_any = false

# Basic safety checks only
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_return_any = false
warn_unreachable = false

# Allow missing imports
ignore_missing_imports = true

# Suppress most error categories
disable_error_code = [
    "import",
    "no-redef",
    "attr-defined",
    "name-defined",
    "call-arg",
    "arg-type",
    "return-value",
    "assignment",
    "type-arg",
    "operator",
    "index",
    "misc",
]

[[tool.mypy.overrides]]
module = "*"
ignore_errors = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=sphinxcontrib.jsontable",
    "--cov-report=term",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["sphinxcontrib.jsontable"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"
