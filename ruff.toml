# Ruff configuration for sphinxcontrib-jsontable
# Optimized for CI pipeline and modern Python development

[tool.ruff]
# Python version compatibility
target-version = "py39"

# Line length (consistent with project standards)
line-length = 88

# Source directories to analyze
src = ["sphinxcontrib", "tests"]

# Rule selection - comprehensive but practical for existing codebase
select = [
    # Essential rules - pycodestyle and pyflakes
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes

    # Import sorting and organization
    "I",   # isort

    # Modern Python upgrades
    "UP",  # pyupgrade (Python syntax modernization)

    # Bug prevention
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions

    # Code simplification
    "PIE", # flake8-pie

    # Print statement detection (useful for production code)
    "T20", # flake8-print

    # Additional quality rules
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify (subset of safe rules)
]

# Ignore rules that conflict with formatter or are too strict for existing code
ignore = [
    "E501",   # line too long, handled by ruff format
    "E203",   # whitespace before ':' (conflicts with formatter)
    "W503",   # line break before binary operator (deprecated)
    "B008",   # do not perform function calls in argument defaults
    "PIE800", # unnecessary-spread operator
    "T201",   # print statements allowed in development
    "T203",   # pprint statements allowed in development
    "SIM108", # use ternary operator - not always more readable
    "SIM117", # use dict.get - can be overly aggressive
]

# Per-file ignores for flexibility
[tool.ruff.per-file-ignores]
# Allow unused imports in __init__.py files (common pattern)
"__init__.py" = ["F401"]

# Test files can be more relaxed
"tests/**/*.py" = [
    "T201",   # Allow print statements in tests
    "T203",   # Allow pprint statements in tests
    "B011",   # Allow assert False in tests
    "SIM117", # Allow more verbose dict access in tests for clarity
]

# Configuration files can have imports at module level
"conf.py" = ["E402"]
"conftest.py" = ["E402"]

# Examples directory can be more relaxed
"examples/**/*.py" = ["T201", "T203", "B008"]

# Import sorting configuration
[tool.ruff.isort]
# Project-specific settings
known-first-party = ["sphinxcontrib.jsontable"]
split-on-trailing-comma = true
combine-as-imports = true
force-grid-wrap = 0
multi-line-output = 3
include-trailing-comma = true
line-length = 88

# Formatting configuration
[tool.ruff.format]
# Use double quotes for consistency with project style
quote-style = "double"

# Preserve trailing commas in multiline structures
skip-magic-trailing-comma = false

# Indentation
indent-style = "space"
tab-size = 4

# Line endings
line-ending = "auto"

# String normalization
docstring-code-format = true
docstring-code-line-length = "dynamic"

# Advanced rule configuration
[tool.ruff.flake8-bugbear]
# Allow default mutable arguments in dataclasses
extend-immutable-calls = ["dataclasses.field"]

[tool.ruff.flake8-quotes]
# Consistent with format.quote-style
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.pyupgrade]
# Keep typing compatibility for older Python versions
keep-runtime-typing = true