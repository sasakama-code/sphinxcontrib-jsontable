# Ruff configuration for sphinxcontrib-jsontable
[tool.ruff]
target-version = "py39"
line-length = 88
src = ["sphinxcontrib"]

# Rule selection optimized for existing codebase
select = [
    # Essential rules
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort

    # Additional rules that are safe to enable
    "UP",  # pyupgrade
    "B",   # flake8-bugbear (basic checks)
    "C4",  # flake8-comprehensions
    "PIE", # flake8-pie
    "T20", # flake8-print
]

# Ignores for compatibility
ignore = [
    "E501",  # line too long, handled by formatter
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
    "B008",  # do not perform function calls in argument defaults
    "PIE800", # unnecessary-spread
]

[tool.ruff.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]
# Test files can be more relaxed
"tests/**/*.py" = ["T201", "T203"]  # Allow print statements in tests
# Allow some flexibility in configuration files
"conf.py" = ["E402"]

[tool.ruff.isort]
known-first-party = ["sphinxcontrib.jsontable"]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.format]
# Use single quotes for consistency
quote-style = "double"
# Ensure trailing commas
skip-magic-trailing-comma = false

# MyPy configuration optimized for gradual typing adoption
[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

# Relaxed settings for existing codebase
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false

# Import handling
ignore_missing_imports = true
follow_imports = "silent"

# Error handling
show_error_codes = true
show_column_numbers = true

# Specific module overrides
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
ignore_errors = true

[[tool.mypy.overrides]]
module = "sphinxcontrib.*"
disallow_untyped_defs = false
warn_return_any = false

# Enhanced coverage configuration
[tool.coverage.run]
source = ["sphinxcontrib.jsontable"]
branch = true
parallel = true
context = "${CONTEXT}"

[tool.coverage.paths]
source = [
    "sphinxcontrib/jsontable",
    "*/site-packages/sphinxcontrib/jsontable",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
sort = "Cover"

exclude_lines = [
    # Standard exclusions
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    
    # Additional exclusions for development
    "pass",
    "\\.\\.\\.",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
title = "sphinxcontrib-jsontable Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"
